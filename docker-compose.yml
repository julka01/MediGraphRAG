version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kg-rag-app
    ports:
      - "8004:8004"
    depends_on:
      neo4j:
        condition: service_started
    volumes:
      - ./.env:/app/.env:ro
      - app_uploads:/app/uploads
      - app_kg_storage:/app/kg_storage
      - app_vector_stores:/app/vector_stores
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ""
      DOCKER_ENV: "true"
      PYTHONPATH: /app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  neo4j:
    image: neo4j:5.18.0
    container_name: neo4j-db
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - ./apoc:/plugins
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 2G
      NEO4J_dbms_memory_pagecache_size: 1G
      NEO4J_dbms_default__listen__address: 0.0.0.0
      NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD}", "RETURN 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 30s

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  app_uploads:
    driver: local
  app_kg_storage:
    driver: local
  app_vector_stores:
    driver: local

networks:
  default:
    name: kg-rag-network
    driver: bridge
